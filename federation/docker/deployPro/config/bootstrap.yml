server:
    port: 8080


#Keycloak 的配置 -- Start
ids:
    keycloak:
        admin:
            username: admin
            password: admin
        serverUrl: http://ids-test.fzyun.io/auth
        company: TEST
        federation:
            defaultValue: "{\"pagination\":[\"false\"],
                            \"fullSyncPeriod\":[\"-1\"],
                            \"connectionPooling\":[\"true\"],
                            \"cachePolicy\":[\"DEFAULT\"],
                            \"useKerberosForPasswordAuthentication\":[\"false\"],
                            \"importEnabled\":[\"true\"],
                            \"enabled\":[\"true\"],
                            \"changedSyncPeriod\":[\"-1\"],
                            \"allowKerberosAuthentication\":[\"false\"],
                            \"debug\":[\"false\"],
                            \"searchScope\":[\"1\"],
                            \"useTruststoreSpi\":[\"ldapsOnly\"],
                            \"priority\":[\"0\"],
                            \"editMode\":[\"READ_ONLY\"],
                            \"validatePasswordPolicy\":[\"false\"],
                            \"batchSizeForSync\":[\"1000\"],
                            \"syncRegistrations\":[\"false\"]
                            }"
#Keycloak 的配置 -- End

spring:
    application:
        name: ids-user-federation
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
    logstash:
        destination: kibana.fzyun.io:4569
    datasource:
        name: ${spring.application.name}
        url: jdbc:mysql://mysql2.fzyun.io:3306/ids?useUnicode=true&characterEncoding=UTF8
        username: root
        password: 12345678
        driver-class-name: com.mysql.jdbc.Driver
        #下面是阿里开源数据库连接池的配置：
        #初始化连接池数量
        initialSize: 5
        #最小连接池数量
        minIdle: 5
        #最大连接池数量
        maxActive: 10
        #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
        #如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
        maxWait: 60000
        #有两个含义：
        #1) Destroy线程会检测连接的间隔时间
        #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
        timeBetweenEvictionRunsMillis: 60000
        #配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        #用来检测连接是否有效的sql，要求是一个查询语句。
        #如果validationQuery为null，testOnBorrow、testOnReturn、
        #testWhileIdle都不会其作用。
        validationQuery: select 'x'
        #建议配置为true，不影响性能，并且保证安全性。
        #申请连接的时候检测，如果空闲时间大于
        #timeBetweenEvictionRunsMillis，
        #执行validationQuery检测连接是否有效。
        testWhileIdle: true
        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        testOnBorrow: false
        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        testOnReturn: false
        #是否缓存preparedStatement，也就是PSCache。
        #PSCache对支持游标的数据库性能提升巨大，比如说oracle。
        #在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
        #作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，
        #该应该是支持PSCache。
        poolPreparedStatements: true
        #要启用PSCache，必须配置大于0，当大于0时
        #poolPreparedStatements自动触发修改为true。
        #在Druid中， 不会存在Oracle下PSCache占用内存过多的问题，
        #可以把这个数值配置大一些，比如说100
        maxOpenPreparedStatements: 20
        #属性类型是字符串，通过别名的方式配置扩展插件，
        #常用的插件有： 监控统计用的filter:stat、日志用的filter:log4j、防御sql注入的filter:wall
        filters: stat

eureka:
    client:
        serviceUrl:
            defaultZone: http://registry.fzyun.io/eureka/
        healthcheck:
            enabled: true
    instance:
        lease-expiration-duration-in-seconds: 9
        lease-renewal-interval-in-seconds: 3
        prefer-ip-address: true
        ip-address: ${spring.cloud.client.ipAddress}
        instance-id: ${eureka.instance.ip-address}:${server.port}:${spring.application.name}


#开启异常中心
exception:
    center:
        open: true


#服务保护配置
hystrix:
    command:
        default:
            execution:
                isolation:
                    thread:
                        #调用服务超时时间， 毫秒
                        timeoutInMilliseconds: 300000
ribbon:
    ReadTimeout: 300000
    ConnectTimeout: 300000